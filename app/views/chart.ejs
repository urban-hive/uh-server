<!DOCTYPE html>

<html>

  <head>

    <meta charset="utf-8">

    <title>Line_Controls_Chart</title>



    <meta http-equiv="refresh" content="300">

    <!-- jQuery -->

    <script src="https://code.jquery.com/jquery.min.js"></script>

    <!-- Google charts -->

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script src="https://www.google.com/jsapi"></script>

  <body>

    <font size=5>서울 종로구 미세먼지 농도 측정 그래프</font><br>

    <font size=1>

    <font color=blue>chkpmValue</font>: 미세먼지 센서로 측정된 수치, <font color=red>pm25Value</font> : AirKorea에서 제공된 초미세먼지 수치, <font color=orange>pm10Value</font> : AirKorea에서 제공된 미세먼지 수치

    </font>

    <div style="text-align:right; width: 908px;">

        <font size=2>update : <span id="clock"></span></font><br>

    </div>



    <div id="Line_Controls_Chart">

        <!-- 라인 차트 생성할 영역 -->

        <div id="lineChartArea" style="padding:0px 20px 0px 0px;"></div>

        <!-- 컨트롤바를 생성할 영역 -->

  	<div id="controlsArea" style="padding:0px 20px 0px 0px;"></div>

    </div>



  </body>



  <script>

  function printTime() {

    var clock = document.getElementById("clock");   // 출력할 장소 선택

    var now = new Date();                                  // 현재시간

    var nowTime = now.getFullYear() + "." + (now.getMonth()+1) + "." + now.getDate() + " " + now.getHours() + ":" + now.getMinutes() + ":" + now.getSeconds();

    clock.innerHTML = nowTime;                        // 현재시간을 출력

  }

  window.onload = function() {                          // 페이지가 로딩되면 실행

    printTime();

  }

  </script>

  </head>



  <script>

  var chartDrowFun = {



    chartDrow : function(){

	var queryObject = "";

    	var queryObjectLen = "";

    	$.ajax({

           type : 'get',

           url : '/dusts/chart/data',             // data를 ajax로 호출

           dataType : 'json',

           success : function(data) {

               queryObject = eval('(' + JSON.stringify(data,null, 2) + ')');

               queryObjectLen = queryObject.dustlist.length;

               //alert('Total lines : ' + queryObjectLen + 'EA');

           },

           error : function(xhr, type) {

	       //alert('server error occoured')

	      alert('server msg : ' + xhr.status)

           }

    	});



        //날짜형식 변경하고 싶으시면 이 부분 수정

        //var chartDateformat 	= 'yyyy년MM월dd일';

        var chartDateformat 	= 'M.dd. HH:MM';

        //라인차트의 라인 수

        var chartLineCount    = 10;

        //컨트롤러 바 차트의 라인 수

        var controlLineCount	= 10;



        function drawDashboard() {

          var data = new google.visualization.DataTable();

          data.addColumn('datetime', 'mdatecreated');

          data.addColumn('number', 'chkpmValue');

          data.addColumn('number', 'pm25Value');

          data.addColumn('number', 'pm10Value');

 

          //alert('data생성-------------------' + queryObjectLen);

          for (var i = 0; i < queryObjectLen; i++) {

              var mdatecreated = queryObject.dustlist[i].mdatecreated;

              var chkpmValue = queryObject.dustlist[i].chkpmValue;

              var pm25Value = queryObject.dustlist[i].pm25Value;

              var pm10Value = queryObject.dustlist[i].pm10Value;

	      //alert(mdatecreated + ' ' + chkpmValue);

              data.addRows([ [ new Date(mdatecreated), chkpmValue, pm25Value, pm10Value ] ]);

          }



          var chart = new google.visualization.ChartWrapper({

              chartType   : 'LineChart',

              containerId : 'lineChartArea', //라인 차트 생성할 영역

              options     : {

                  isStacked   : 'percent',

                  focusTarget : 'category',

                  height      : 500,

                  width	      : '100%',

                  legend      : { position: "top", textStyle: {fontSize: 13}},

                  pointSize   : 5,

                  tooltip     : {textStyle : {fontSize:12}, showColorCode : true,trigger: 'both'},

                  hAxis	: {format: chartDateformat, gridlines:{count:chartLineCount,units: {

                      years : {format: ['yyyy년']},

                      months: {format: ['MM월']},

                      days  : {format: ['dd일']},

                      hours : {format: ['HH시']}}

                      },textStyle: {fontSize:12}},

                 vAxis : {minValue: 50,viewWindow:{min:0},gridlines:{count:-1},textStyle:{fontSize:12}},

                 animation  : {startup: true,duration: 1000,easing: 'in' },

                 annotations: {pattern: chartDateformat,

                      textStyle: {

                      fontSize: 15,

                      bold: true,

                      italic: true,

                      color: '#871b47',

                      auraColor: '#d799ae',

                      opacity: 0.8,

                      pattern: chartDateformat

                      }

                  }

              }

          });



          var control = new google.visualization.ControlWrapper({

              controlType: 'ChartRangeFilter',

              containerId: 'controlsArea',  //control bar를 생성할 영역

              options: {

                  ui:{

                        chartType: 'LineChart',

                        chartOptions: {

                        chartArea: {'width': '60%','height' : 80},

                          hAxis: {'baselineColor': 'none', format: chartDateformat, textStyle: {fontSize:12},

                        gridlines:{count:controlLineCount,units: {

                             years : {format: ['yyyy년']},

                             months: {format: ['MM월']},

                             days  : {format: ['dd일']},

                             hours : {format: ['HH시']}}

                        }}

                      }

                  },

                  filterColumnIndex: 0

              }

          });



          var date_formatter = new google.visualization.DateFormat({ pattern: chartDateformat});

          date_formatter.format(data, 0);



          var dashboard = new google.visualization.Dashboard(document.getElementById('Line_Controls_Chart'));

          window.addEventListener('resize', function() { dashboard.draw(data); }, false); //화면 크기에 따라 그래프 크기 변경

          dashboard.bind([control], [chart]);

          dashboard.draw(data);



        }

        google.charts.setOnLoadCallback(drawDashboard);



      }

    }



$(document).ready(function(){

    google.charts.load('current', {

       'packages':['line','controls']

    });

    chartDrowFun.chartDrow(); //chartDrow() 실행

});

  </script>



  <font size=1>

  *공공데이터 참조사이트 : http://tech.leotek.co.kr/2017/04/11/공공데이터포털-한국환경공단-대기오염-api/<br>

  *AirKorea API : http://openapi.airkorea.or.kr/openapi/services/rest/ArpltnInforInqireSvc/getMsrstnAcctoRltmMesureDnsty?stationName=종로구&dataTerm=month&pageNo=1&numOfRows=10&ServiceKey=u4Q%2FF%2BzFS1PHRIhVj2cJcxGP8J%2B5vOxCbaO039frcCGDEuD2km6rhbR2wZrwBrZtlLu2Z%2FbsqMHDVVGHwkq8ow%3D%3D&ver=1.3%22

  </font>



</html>